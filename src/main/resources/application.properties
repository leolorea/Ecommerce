spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=root
spring.datasource.password=irxn4q7z
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

spring.cloud.stream.kafka.binder.autorCreateTopics=true
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.configuration.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.cloud.stream.kafka.binder.configuration.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer= io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.cloud.stream.kafka.binder.configuration.key.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

spring.cloud.stream.bindings.checkout-created-output.destination=streaming.ecommerce.checkout.created
spring.cloud.stream.bindings.checkout-created-output.contentType=application/*+avro
spring.cloud.stream.bindings.checkout-created-output.producer.use-native-encoding=true
spring.cloud.stream.bindings.payment-paid-input.destination=streaming.ecommerce.payment.paid
spring.cloud.stream.bindings.payment-paid-input.contentType = application/*+avro
spring.cloud.stream.bindings.payment-paid-input.group = ${spring.application.name}
spring.cloud.stream.bindings.payment-paid-input.consumer.use-native-decoding=true

spring.kafka.properties.schema.registry.url=http://localhost:8081

spring.application.name=ecommerce

server.port=8085

